[{"/home/anderson/dev/instool-app/src/index.tsx":"1","/home/anderson/dev/instool-app/src/controllers/InstagramSearch.ts":"2","/home/anderson/dev/instool-app/src/pages/App.tsx":"3","/home/anderson/dev/instool-app/src/reportWebVitals.ts":"4"},{"size":535,"mtime":1608168260153,"results":"5","hashOfConfig":"6"},{"size":199,"mtime":1608168079622,"results":"7","hashOfConfig":"6"},{"size":4832,"mtime":1609418542455,"results":"8","hashOfConfig":"6"},{"size":425,"mtime":1607896914593,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nh68ob",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anderson/dev/instool-app/src/index.tsx",[],"/home/anderson/dev/instool-app/src/controllers/InstagramSearch.ts",[],"/home/anderson/dev/instool-app/src/pages/App.tsx",["19","20","21","22","23"],"import React from 'react';\nimport { message, Input, Image, Typography, Descriptions, Button } from 'antd';\nimport { createGlobalStyle } from 'styled-components';\nimport { useStateful } from 'react-hanger';\n\nimport { ParentDiv } from '../components/ParentDiv';\nimport { UsernameDiv } from './../components/UsernameDiv';\nimport { InstagramSearch } from '../controllers/InstagramSearch';\nimport { SaveData } from '../controllers/SaveData';\nimport { User } from '../interfaces/UserModel';\nimport 'typeface-poppins';\nimport Logo from '../images/INSTOOL.png';\nimport Icon from '../images/cubo.svg';\n\nconst App = () => {\n  const instagramData = useStateful<User | undefined>(undefined);\n  const username = useStateful('');\n\n  const onSave = React.useCallback(async () => {\n    if (!instagramData.value) return;\n    message.loading({ content: 'Salvando usuário...', key: 'saving' });\n    await SaveData(instagramData.value);\n    message.destroy('saving');\n    message.success({ content: 'Usuário salvo com sucesso!' });\n  }, [instagramData]);\n\n  const onUsernameChange = React.useCallback(\n    ({ target: { value } }) => {\n      //observa\n      username.setValue(value);\n    },\n    [username],\n  );\n\n  const canSearch = React.useCallback(() => {\n    return username.value.length > 0;\n  }, [username]);\n\n  const onSearch = React.useCallback(async () => {\n    if (!canSearch()) return;\n    instagramData.setValue(undefined);\n    message.loading({ content: 'Buscando conta...', key: 'loadingInstagram' });\n    const result = await InstagramSearch(username.value);\n    message.destroy('loadingInstagram');\n    if (result.error === 'USER_NOT_FOUND') {\n      message.error({ content: 'Usuário não encontrado!' });\n      return;\n    }\n    instagramData.setValue(result);\n  }, [username, canSearch, instagramData]);\n\n  return (\n    <React.Fragment>\n      <ParentDiv>\n        <img src={Logo} className=\"instool\" />\n        <UsernameDiv>\n          <Typography.Text>\n            Entre com o nome de usuário do Instagram para obter informações...\n          </Typography.Text>\n          <Input.Search\n            className=\"username\"\n            enterButton={\n              <Button disabled={!canSearch()} type=\"primary\">\n                Buscar\n              </Button>\n            }\n            addonBefore={'https://instagram.com/@'}\n            placeholder=\"seu_usuario\"\n            onSearch={onSearch}\n            value={username.value}\n            onChange={onUsernameChange}\n          />\n        </UsernameDiv>\n        {!!instagramData.value && (\n          <React.Fragment>\n            <img className=\"avatar\" src={instagramData.value.profile_pic_url} />\n            <Descriptions className=\"detalhes\" bordered>\n              <Descriptions.Item label=\"Nome do usuário:\">\n                {instagramData.value.username}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Nome completo:\">\n                {instagramData.value.full_name}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Biografia:\">\n                {instagramData.value.biography || '[ vazio ]'}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"URL externa:\">\n                {instagramData.value.external_url}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Conta recente:\">\n                {instagramData.value.is_joined_recently ? 'Sim' : 'Não'}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"É privado:\">\n                {instagramData.value.is_private ? 'Sim' : 'Não'}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"É um canal:\">\n                {instagramData.value.has_channel ? 'Sim' : 'Não'}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"É uma conta de negócio:\">\n                {instagramData.value.is_business_account ? 'Sim' : 'Não'}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Categoria de negócio:\">\n                {instagramData.value.business_category_name ||\n                  'Não é um negócio'}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Seguindo:\">\n                {instagramData.value.follow}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Seguidores:\">\n                {instagramData.value.followed_by}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Quantidade de posts:\">\n                {instagramData.value.timeline_media_count}\n              </Descriptions.Item>\n            </Descriptions>\n            <Button onClick={onSave} type=\"primary\" className=\"btnSave\">\n              Salvar este usuário\n            </Button>\n          </React.Fragment>\n        )}\n      </ParentDiv>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","/home/anderson/dev/instool-app/src/reportWebVitals.ts",[],{"ruleId":"24","severity":1,"message":"25","line":2,"column":26,"nodeType":"26","messageId":"27","endLine":2,"endColumn":31},{"ruleId":"24","severity":1,"message":"28","line":3,"column":10,"nodeType":"26","messageId":"27","endLine":3,"endColumn":27},{"ruleId":"24","severity":1,"message":"29","line":13,"column":8,"nodeType":"26","messageId":"27","endLine":13,"endColumn":12},{"ruleId":"30","severity":1,"message":"31","line":55,"column":9,"nodeType":"32","endLine":55,"endColumn":47},{"ruleId":"30","severity":1,"message":"31","line":76,"column":13,"nodeType":"32","endLine":76,"endColumn":81},"@typescript-eslint/no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'createGlobalStyle' is defined but never used.","'Icon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]